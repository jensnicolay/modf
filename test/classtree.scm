
 (letrec ((_append0 (lambda (_l0 _m0) (let ((_62 (null? _l0))) (if _62 _m0 (let ((_63 (car _l0))) (let ((_64 (cdr _l0))) (let ((_65 (_append0 _64 _m0))) (cons _63 _65))))))))) (letrec ((_atom?0 (lambda (_x0) (let ((_61 (pair? _x0))) (not _61))))) (letrec ((_maak-dier0 (lambda (_naam1 _eigenschappen1) (list _naam1 _eigenschappen1)))) (letrec ((_naam0 (lambda (_dier0) (car _dier0)))) (letrec ((_eigenschappen0 (lambda (_dier1) (cadr _dier1)))) (letrec ((_dier?0 (lambda (_dier2) (let ((_57 (pair? _dier2))) (if _57 (let ((_58 (_naam0 _dier2))) (let ((_59 (_atom?0 _58))) (if _59 (let ((_60 (_eigenschappen0 _dier2))) (pair? _60)) #f))) #f))))) (letrec ((_maak-boom0 (lambda (_knoop1 _deelbomen1) (list _knoop1 _deelbomen1)))) (letrec ((_knoop0 (lambda (_boom0) (car _boom0)))) (letrec ((_deelbomen0 (lambda (_boom1) (cadr _boom1)))) (letrec ((_leeg?0 (lambda (_boom2) (null? _boom2)))) (letrec ((_knoop?0 (lambda (_boom3) (_dier?0 _boom3)))) (letrec ((_classificatieboom0 (let ((_26 'dier)) (let ((_27 '(kan-ademen kan-bewegen))) (let ((_28 (_maak-dier0 _26 _27))) (let ((_29 'vis)) (let ((_30 '(kan-zwemmen heeft-schubben heeft-vinnen))) (let ((_31 (_maak-dier0 _29 _30))) (let ((_32 'ballonvis)) (let ((_33 '(kan-zwellen is-geel))) (let ((_34 (_maak-dier0 _32 _33))) (let ((_35 (list _34))) (let ((_36 (_maak-boom0 _31 _35))) (let ((_37 'landdier)) (let ((_38 '(heeft-huid kan-lopen heeft-poten))) (let ((_39 (_maak-dier0 _37 _38))) (let ((_40 'olifant)) (let ((_41 '(is-groot))) (let ((_42 (_maak-dier0 _40 _41))) (let ((_43 (list _42))) (let ((_44 (_maak-boom0 _39 _43))) (let ((_45 'vogel)) (let ((_46 '(kan-vliegen heeft-vleugels heeft-veren))) (let ((_47 (_maak-dier0 _45 _46))) (let ((_48 'kanarie)) (let ((_49 '(kan-zingen is-geel))) (let ((_50 (_maak-dier0 _48 _49))) (let ((_51 'arend)) (let ((_52 '(is-groot))) (let ((_53 (_maak-dier0 _51 _52))) (let ((_54 (list _50 _53))) (let ((_55 (_maak-boom0 _47 _54))) (let ((_56 (list _36 _44 _55))) (_maak-boom0 _28 _56)))))))))))))))))))))))))))))))))) (letrec ((_all-kinds0 (lambda (_boom4) (let ((_25 (_leeg?0 _boom4))) '())))) (letrec ((_all-kinds-in0 (lambda (_lst0) (let ((_20 (null? _lst0))) (if _20 '() (let ((_21 (car _lst0))) (let ((_22 (_all-kinds0 _21))) (let ((_23 (cdr _lst0))) (let ((_24 (_all-kinds-in0 _23))) (_append0 _22 _24)))))))))) (letrec ((_geef-eigenschappen0 (lambda (_boom5 _soort0) (letrec ((_geef-eig0 (lambda (_boom6 _eig0) (let ((_15 (_dier?0 _boom6))) (let ((_16 (_naam0 _boom6))) (let ((_17 (eq? _16 _soort0))) (if _17 (let ((_18 (_eigenschappen0 _boom6))) (let ((_19 (list _18))) (_append0 _eig0 _19))) #f))))))) (letrec ((_geef-eig-in0 (lambda (_lst1 _eig1) (let ((_14 (null? _lst1))) #f)))) (let ((_13 '())) (_geef-eig0 _boom5 _13))))))) (letrec ((_ask?0 (lambda (_boom7 _soort1 _eig2) (let ((_eigenschappen2 (_geef-eigenschappen0 _boom7 _soort1))) (let ((_12 (memq _eig2 _eigenschappen2))) (pair? _12)))))) (let ((_0 (_all-kinds0 _classificatieboom0))) (let ((_1 '(dier vis ballonvis landdier olifant vogel kanarie arend))) (let ((_2 (equal? _0 _1))) (if _2 (let ((_3 'landdier)) (let ((_4 'kan-lopen)) (let ((_5 (_ask?0 _classificatieboom0 _3 _4))) (if _5 (let ((_6 'ballonvis)) (let ((_7 'heeft-vinnen)) (let ((_8 (_ask?0 _classificatieboom0 _6 _7))) (if _8 (let ((_9 'olifant)) (let ((_10 'kan-vliegen)) (let ((_11 (_ask?0 _classificatieboom0 _9 _10))) (not _11)))) #f)))) #f)))) #f))))))))))))))))))))
; #f