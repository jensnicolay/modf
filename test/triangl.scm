(let ((*board* '<undefined>))
  (let ((*sequence* '<undefined>))
    (let ((*a* '<undefined>))
      (let ((*b* '<undefined>))
        (let ((*c* '<undefined>))
          (let ((*answer* '<undefined>))
            (let ((attempt '<undefined>))
              (let ((test '<undefined>))
                (let ((xxx '(1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1)))
                  (let ((_p2 (list->vector xxx)))
                    (let ((_$3 (set! *board* _p2)))
                      (let ((yyy '(0 0 0 0 0 0 0 0 0 0 0 0 0 0)))
                        (let ((_p4 (list->vector yyy)))
                          (let ((_$5 (set! *sequence* _p4)))
                            (let ((uuu '(1 2 4 3 5 6 1 3 6 2 5 4 11 12 13 7 8 4 4 7 11 8 12 13 6 10 15 9 14 13 13 14 15 9 10 6 6)))
                              (let ((_p6 (list->vector uuu)))
                                (let ((_$7 (set! *a* _p6)))
                                  (let ((ppp '(2 4 7 5 8 9 3 6 10 5 9 8 12 13 14 8 9 5 2 4 7 5 8 9 3 6 10 5 9 8 12 13 14 8 9 5 5)))
                                    (let ((_p8 (list->vector ppp)))
                                      (let ((_$9 (set! *b* _p8)))
                                        (let ((vvv '(4 7 11 8 12 13 6 10 15 9 14 13 13 14 15 9 10 6 1 2 4 3 5 6 1 3 6 2 5 4 11 12 13 7 8 4 4)))
                                          (let ((_p10 (list->vector vvv)))
                                            (let ((_$11 (set! *c* _p10)))
                                              (let ((_$12 (set! *answer* '())))
                                                (let ((_$44 (set! attempt (lambda (i depth )
                                                                            (let ((_p13 (= depth 14)))
                                                                                               (if _p13 (let ((_p14 (vector->list *sequence*)))
                                                                                                          (let ((_p15 (cdr _p14)))
                                                                                                            (let ((_p16 (cons _p15 *answer*)))
                                                                                                              (let ((_$17 (set! *answer* _p16))) #t))))
                                                                                                   (let ((_p18 (vector-ref *a* i)))
                                                                                                     (let ((_p19 (vector-ref *board* _p18)))
                                                                                                       (let ((_p20 (= 1 _p19)))
                                                                                                         (let ((_p26 (if _p20 (let ((_p21 (vector-ref *b* i)))
                                                                                                                                (let ((_p22 (vector-ref *board* _p21)))
                                                                                                                                  (let ((_p23 (= 1 _p22)))
                                                                                                                                    (if _p23 (let ((_p24 (vector-ref *c* i)))
                                                                                                                                               (let ((_p25 (vector-ref *board* _p24))) (= 0 _p25))) #f)))) #f)))
                                                                                                           (if _p26 (let ((_p27 (vector-ref *a* i)))
                                                                                                                      (let ((_$28 (vector-set! *board* _p27 0)))
                                                                                                                        (let ((_p29 (vector-ref *b* i)))
                                                                                                                          (let ((_$30 (vector-set! *board* _p29 0)))
                                                                                                                            (let ((_p31 (vector-ref *c* i)))
                                                                                                                              (let ((_$32 (vector-set! *board* _p31 1)))
                                                                                                                                (let ((_$33 (vector-set! *sequence* depth i)))
                                                                                                                                  (letrec ((_loop0 (lambda (j depth )
                                                                                                                                                     (let ((_t1 (= j 36)))
                                                                                                                                                       (let ((_p34 (if _t1 _t1 (attempt j depth))))
                                                                                                                                                         (if _p34 #f (let ((_p35 (+ j 1))) (_loop0 _p35 depth))))))))
                                                                                                                                    (let ((_p36 (+ depth 1))) (let ((_$37 (_loop0 0 _p36)))
                                                                                                                                                                (let ((_p38 (vector-ref *a* i)))
                                                                                                                                                                  (let ((_$39 (vector-set! *board* _p38 1)))
                                                                                                                                                                    (let ((_p40 (vector-ref *b* i)))
                                                                                                                                                                      (let ((_$41 (vector-set! *board* _p40 1)))
                                                                                                                                                                        (let ((_p42 (vector-ref *c* i)))
                                                                                                                                                                          (let ((_$43 (vector-set! *board* _p42 0))) #f))))))))))))))))
                                                                                                               #f)))))))))))
                                                  (let ((_$47 (set! test (lambda (i depth )
                                                                           (let ((_$45 (set! *answer* '())))
                                                                             (let ((_$46 (attempt i depth)))
                                                                               (car *answer*)))))))
                                                    (test 22 1)))))))))))))))))))))))))))

